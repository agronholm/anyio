---
name: Test against downstream projects

on:
  workflow_dispatch:

jobs:
  starlette:
    name: "Starlette on Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.13"]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: encode/starlette
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
          allow-prereleases: true
          cache: pip
          cache-dependency-path: requirements.txt
      - name: Install dependencies
        run: |
          scripts/install
          pip install anyio[trio]@git+https://github.com/agronholm/anyio.git@${{ github.ref_name }}
      - name: Run tests
        run: scripts/test
      - name: Enforce coverage
        run: scripts/coverage

  httpcore:
    name: "Httpcore on Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.13"]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: encode/httpcore
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
          allow-prereleases: true
          cache: pip
          cache-dependency-path: requirements.txt
      - name: Install dependencies
        run: |
          scripts/install
          pip install anyio[trio]@git+https://github.com/agronholm/anyio.git@${{ github.ref_name }}
      - name: Run tests
        run: scripts/test
      - name: Enforce coverage
        run: scripts/coverage

  fastapi:
    name: "FastAPI on Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.13"]
    env:
      UV_SYSTEM_PYTHON: 1
    steps:
      - uses: actions/checkout@v4
        with:
          repository: tiangolo/fastapi
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Setup uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.4.15"
          enable-cache: true
          cache-dependency-glob: |
            requirements**.txt
            pyproject.toml
      - name: Install dependencies
        run: |
          uv pip install -r requirements-tests.txt
          uv pip install anyio[trio]@git+https://github.com/agronholm/anyio.git@${{ github.ref_name }}
      - name: Run tests
        run: pytest -W ignore::ResourceWarning
        env:
          PYTHONPATH: ./docs_src

  litestar:
    name: "Litestar on Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.12"]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: litestar-org/litestar
      - name: Set up python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "0.5.4"
          enable-cache: true
      - name: Install dependencies
        run: |
          uv sync
          uv pip install anyio[trio]@git+https://github.com/agronholm/anyio.git@${{ github.ref_name }}
      - name: Test
        run: uv run pytest docs/examples tests -n auto
